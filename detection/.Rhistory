devtools::install_github('https://github.com/LuiseQuoss/ebvcube')
install.packages('devtools')
devtools::install_github('https://github.com/LuiseQuoss/ebvcube')
library(ebvcube)
file <- system.file(file.path("extdata","martins_comcom_subset.nc"), package="ebvcube")
prop.file <- ebv_properties(file)
prop.file@general[1:4]
install.packages('overlap')
library(overlap)
setwd("~/Dropbox/PostDoc/iavh/2023_Parex/workflows/detection")
df = read.csv('../../output/detections/ENGPUS_temporal_activity.csv')
df
df = read.csv('../../output/detections/ENGPUS_temporal_raw.csv')
df
df = read.csv('../../output/detections/ENGPUS_temporal_raw.csv')
df
df = read.csv('../../output/detections/ENGPUS_temporal_raw.csv')
df
df = read.csv('../../output/detections/ENGPUS_temporal_raw.csv')
df
df[c('Time', 'Sps', 'Zone')]
df = df[c('Time', 'Sps', 'Zone')]
table(df$Zone)
range(df$Time)
timeRad <- df$Time * 2 * pi
timeRad
engpus_P0 <- timeRad[df$Zone == 't0_P']
engpus_P0
densityPlot(engpus_P0, rug=TRUE)
engpus_P0 <- timeRad
densityPlot(engpus_P0, rug=TRUE)
densityPlot(engpus_P0, rug=TRUE, adjust=1)
densityPlot(engpus_P0, rug=TRUE, adjust=2)
densityPlot(engpus_P0, rug=TRUE, adjust=0.2)
densityPlot(engpus_P0, rug=TRUE, adjust=1)
table(df$Zone)
engpus_t0P <- timeRad[df$Zone == 't0_P']
engpus_t0Z <- timeRad[df$Zone == 't0_P']
sp_t0P <- timeRad[df$Zone == 't0_P']
sp_t0Z <- timeRad[df$Zone == 't0_P']
min(sp_t0P, sp_t0Z)
sp_t0P
min(length(sp_t0P), length(sp_t0Z))
sp_t0P <- timeRad[df$Zone == 't0_P']
sp_t0Z <- timeRad[df$Zone == 't0_Z']
min(length(sp_t0P), length(sp_t0Z))
length(sp_t0Z)
ovlp <- overlapEst(sp_t0P, sp_t0Z, type="Dhat4")
overlapPlot(sp_t0P, sp_t0Z, main="T0")
ovlp
overlapPlot(sp_t0P, sp_t0Z, main="T0", adjust = 2)
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
overlapPlot(sp_t0P, sp_t0Z, main="T0", adjust = 2, xlab='Hora')
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main="T0",
xlab='Hora',
ylab='Densidad')
sps = 'ENGPUS'
paste(sps, "T0")
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, " - T0"),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, " - T0", "∆hat"),
xlab='Hora',
ylab='Densidad')
paste(sps, "T0", "-", "∆hat", ovlp)
round(ovlp, 2)
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
sp_t0P <- timeRad[df$Zone == 't2_P']
sp_t0Z <- timeRad[df$Zone == 't2_Z']
min(length(sp_t0P), length(sp_t0Z))
ovlp <- overlapEst(sp_t0P, sp_t0Z, type="Dhat4")
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
sps = 'PITSUL'
df = read.csv('../../output/detections/grekis_temporal_raw.csv')
df = df[c('Time', 'Sps', 'Zone')]
table(df$Zone)
range(df$Time)
timeRad <- df$Time * 2 * pi
sp_t0P <- timeRad[df$Zone == 't2_P']
sp_t0Z <- timeRad[df$Zone == 't2_Z']
min(length(sp_t0P), length(sp_t0Z))
ovlp <- overlapEst(sp_t0P, sp_t0Z, type="Dhat4")
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
timeRad <- df$Time * 2 * pi
sp_t0P <- timeRad[df$Zone == 't0_P']
sp_t0Z <- timeRad[df$Zone == 't0_Z']
min(length(sp_t0P), length(sp_t0Z))
ovlp <- overlapEst(sp_t0P, sp_t0Z, type="Dhat4")
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
sps = 'ATRPIL'
df = read.csv('../../output/detections/peptyr1_temporal_raw.csv')
df = df[c('Time', 'Sps', 'Zone')]
table(df$Zone)
range(df$Time)
timeRad <- df$Time * 2 * pi
sp_t0P <- timeRad[df$Zone == 't0_P']
sp_t0Z <- timeRad[df$Zone == 't0_Z']
min(length(sp_t0P), length(sp_t0Z))
ovlp <- overlapEst(sp_t0P, sp_t0Z, type="Dhat1")
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
table(df$Zone)
range(df$Time)
timeRad <- df$Time * 2 * pi
sp_t0P <- timeRad[df$Zone == 't2_P']
sp_t0Z <- timeRad[df$Zone == 't2_Z']
min(length(sp_t0P), length(sp_t0Z))
ovlp <- overlapEst(sp_t0P, sp_t0Z, type="Dhat1")
overlapPlot(sp_t0P, sp_t0Z, adjust = 2,
main=paste(sps, "T0", "-", "∆hat", round(ovlp, 2)),
xlab='Hora',
ylab='Densidad')
legend('topright', c("Intervención", "Control"), lty=c(1,2), col=c(1,4), bty='n')
min(length(sp_t0P), length(sp_t0Z))
